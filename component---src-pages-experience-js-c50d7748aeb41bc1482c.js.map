{"version":3,"file":"component---src-pages-experience-js-c50d7748aeb41bc1482c.js","mappings":"iOAWMA,EAAgB,CACpB,CAAEC,KAAM,UAAWC,IAAK,KACxB,CAAED,KAAM,aAAcC,IAAK,gBAC3B,CAAED,KAAM,WAAYC,IAAK,aACzB,CAAED,KAAM,aAAcC,IAAK,gBAsI7B,UAnImB,WACjB,IAWMC,GAXOC,EAAAA,EAAAA,gBAAe,cAWDC,kBAAkBC,MAE7C,GAA0BC,EAAAA,EAAAA,WAAS,OAAIJ,EAAcK,MAAM,EAAG,MAAtDC,EAAR,KAAcC,EAAd,KAEA,GAAkCH,EAAAA,EAAAA,WAAS,GAAnCI,EAAR,KAAkBC,EAAlB,KAEA,GAAgCL,EAAAA,EAAAA,UAASJ,EAAcU,OAAS,IAAxDC,EAAR,KAAiBC,EAAjB,KAEMC,GAAUC,EAAAA,EAAAA,UAEVC,EAAiB,SAACC,GACTA,EAAS,GACbC,gBACTR,GAAY,IAiCd,OA7BAS,EAAAA,EAAAA,YAAU,WACV,IAKMC,EAAW,IAAIC,qBAAqBL,EAL5B,CACZM,KAAM,KACNC,WAAY,OACZC,UAAW,IAGTV,EAAQW,SACVL,EAASM,QAAQZ,EAAQW,WAExB,KAEHN,EAAAA,EAAAA,YAAU,WACV,GAAIV,GAAYG,EAAS,CACvB,IAAMe,EAAgBpB,EAAKI,OAErBiB,EADSD,EAAgB1B,EAAcU,OAEzCV,EAAcK,MAAMqB,EAAeA,EAAgB,IACnD,GACJnB,EAAQ,GAAD,eAAKD,IAAL,OAAcqB,KACrBlB,GAAY,MAEX,CAACD,EAAUG,KAEdO,EAAAA,EAAAA,YAAU,WACR,IAAMU,EAAStB,EAAKI,OAASV,EAAcU,OAC3CE,EAAWgB,KACV,CAACtB,IAGJ,gBAAC,IAAD,KACE,uBAAKuB,UAAWC,EAAAA,IAChB,gBAAC,IAAD,CAAKC,MAAM,eACT,uBAAKF,UAAWC,EAAAA,IACXjC,EAAcmC,KAAI,SAACC,EAAMC,GAAP,OACjB,gBAAC,WAAD,CAAgBC,IAAKF,EAAKlC,KACxB,gBAAC,EAAAqC,KAAD,CAAMC,GAAIJ,EAAKlC,KAAMkC,EAAKnC,MACzBoC,IAAMrC,EAAca,OAAS,GAAK,4CAI3C,gBAAC,EAAA4B,EAAD,CACEC,IAAI,6BACJC,QAAQ,QACRC,MAAO,IACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,GACJC,MAAO,CAAEC,aAAa,kBANxB,uBASF,sBAAIhB,UAAWC,EAAAA,IAAf,wCACA,2BAGA,gBAAC,IAAD,CAAKgB,GAAI,EAAGC,GAAI,GACbzC,EAAK0B,KAAI,SAACgB,GAAD,OACR,gBAAC,IAAD,CAAKb,IAAKa,EAAWT,KACnB,uBAAKV,UAAU,oBACb,0BACEU,IAAKS,EAAWT,IAChBR,MAAM,YACNkB,iBAAe,KAGnB,0BAAKD,EAAWE,UAGtB,uBAAKC,IAAKtC,GACPF,EAAU,uCAAoB,4BAIjC,2BAEA,mDACE,qBAAGyC,KAAK,yBAAyBC,OAAO,SAASC,IAAI,uBACnD,gBAAC,EAAAhB,EAAD,CACEC,IAAI,wBACJE,MAAO,IACPc,QAAS,IACTb,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,GACJC,MAAO,CAAEC,aAAa,kBANxB,sBASJ,iDAEE,8BACE,qBAAGO,KAAK,yBAAyBC,OAAO,SAASC,IAAI,uBACnD,gBAAC,IAAD,CACEf,IAAKiB,EAAAA,EACLb,IAAI,GACJc,OAAK,EACLhB,MAAO","sources":["webpack://protandim/./src/pages/experience.js"],"sourcesContent":["import React, { useState, useEffect, useRef} from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Row, Col, Image } from \"react-bootstrap\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport * as styles from \"../components/index.module.css\";\n\nimport lineOrder from \"../images/lineorder.gif\";\n\nconst mainPageLinks = [\n  { text: \"หน้าแรก\", url: \"/\" },\n  { text: \"ไลฟ์เวนเทจ\", url: \"/lifevantage\" },\n  { text: \"งานวิจัย\", url: \"/research\" },\n  { text: \"ประสบการณ์\", url: \"/experience\" },\n];\n\nconst Experience = () => {\n  const data = useStaticQuery(graphql`\n  query ExperienceQuery {\n    allExperienceJson {\n      nodes {\n          src\n          desc\n        }\n      }\n    }\n  `);\n\n  const allExperience = data.allExperienceJson.nodes\n\n  const [ list, setList ] = useState([...allExperience.slice(0, 12)]);\n\n  const [ loadMore, setLoadMore ] = useState(false);\n\n  const [ hasMore, setHasMore ] = useState(allExperience.length > 12)\n\n  const loadRef = useRef();\n\n  const handleObserver = (entities) => {\n  const target = entities[0]\n  if (target.isIntersecting) {\n    setLoadMore(true)\n  }\n  }\n\n  useEffect(() => {\n  var options = {\n    root: null,\n    rootmargin: \"20px\",\n    threshold: 1.0,\n  }\n  const observer = new IntersectionObserver(handleObserver, options)\n  if (loadRef.current) {\n    observer.observe(loadRef.current)\n  }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n  if (loadMore && hasMore) {\n    const currentLength = list.length\n    const isMore = currentLength < allExperience.length\n    const nextResults = isMore\n      ? allExperience.slice(currentLength, currentLength + 12)\n      : []\n    setList([...list, ...nextResults])\n    setLoadMore(false)\n  }\n  }, [loadMore, hasMore]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const isMore = list.length < allExperience.length\n    setHasMore(isMore)\n  }, [list]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n  <Layout>\n    <div className={styles.textCenter}>\n    <Seo title=\"Experience\" />\n      <div className={styles.intro}>\n          {mainPageLinks.map((link, i) => (\n            <React.Fragment key={link.url}>\n              <Link to={link.url}>{link.text}</Link>\n              {i !== mainPageLinks.length - 1 && <> · </>}\n            </React.Fragment>\n          ))}\n      </div>\n      <StaticImage\n        src=\"../images/LFVNFullLogo.jpg\"\n        loading=\"eager\"\n        width={800}\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        alt=\"\"\n        style={{ marginBottom: `var(--space-3)` }}\n      />\n    </div>\n    <h1 className={styles.textCenter}>จุดเริ่มต้นเล็กๆ สร้างฝันที่ยิ่งใหญ่</h1>\n    <hr />\n    \n    {/* Experience */}\n    <Row xs={1} md={4}>       \n      {list.map((experience) => (\n        <Col key={experience.src}>\n          <div className=\"ratio ratio-16x9\">\n            <iframe\n              src={experience.src}\n              title=\"Embed vdo\"\n              allowFullScreen\n            />\n          </div>\n          <h6>{experience.desc}</h6>\n        </Col>\n      ))}\n    <div ref={loadRef}>\n      {hasMore ? <p>Loading...</p> : <p></p>}\n    </div>\n    </Row>\n    \n    <hr />\n\n    <h4>สอบถามผ่านไลน์...คลิก</h4> \n      <a href=\"https://lin.ee/PdT5d43\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <StaticImage\n          src=\"../images/linemai.png\"\n          width={300}\n          quality={100}\n          formats={[\"auto\", \"webp\", \"avif\"]}\n          alt=\"\"\n          style={{ marginBottom: `var(--space-3)` }}\n        />\n      </a>\n    <h3>โทร: (065) 993 2500</h3>\n    {/* Line Order Image */}\n      <center>\n        <a href=\"https://lin.ee/PdT5d43\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <Image\n            src={lineOrder}\n            alt=\"\"\n            fluid\n            width={500}\n          />\n        </a>\n      </center>\n    {/* Line Order Image */}\n  </Layout>\n  );\n};\n\nexport default Experience;\n"],"names":["mainPageLinks","text","url","allExperience","useStaticQuery","allExperienceJson","nodes","useState","slice","list","setList","loadMore","setLoadMore","length","hasMore","setHasMore","loadRef","useRef","handleObserver","entities","isIntersecting","useEffect","observer","IntersectionObserver","root","rootmargin","threshold","current","observe","currentLength","nextResults","isMore","className","styles","title","map","link","i","key","Link","to","S","src","loading","width","formats","alt","style","marginBottom","xs","md","experience","allowFullScreen","desc","ref","href","target","rel","quality","lineOrder","fluid"],"sourceRoot":""}